#!/bin/bash

set -e

indent() {
  sed -u 's/^/       /'
}

build=$1
cache=$2

#ensure it exists
mkdir -p ${cache}

io_version="2013.12.04"
io_tar_dir="io-2013.12.04"
io_url="https://codeload.github.com/stevedekorte/io/tar.gz/${io_version}"
io_file="io-${io_version}.tar.gz"

cmake_version="2.8.6"
cmake_url="http://www.cmake.org/files/v2.8/cmake-2.8.6.tar.gz"
cmake_file="cmake-${cmake_version}.tar.gz"
cmake_tar_dir="cmake-${cmake_version}"

libe_version="2.0.16"
libe_dir="libevent-${libe_version}-stable"
libe_file="${libe_dir}.tar.gz"
libe_url="http://cloud.github.com/downloads/libevent/libevent/${libe_file}"

cache_target=${cache}/${io_file}
build_target=${build}/.local
target=/app/.local

if [ ! -f ${cache_target} ]; then
  echo "No cached compile detected. Bulding..." | indent
  cd $build

  # Download all files first
  curl -s ${cmake_url} > ${cmake_file}
  tar zxf ${cmake_file}
  curl -s ${libe_url} > ${libe_file}
  tar zxf ${libe_file}
  curl -s ${io_url} > ${io_file}
  tar zxf ${io_file}

  echo "Compiling cmake v${cmake_version}..." | indent
  #Compile cmake
  cd ${cmake_tar_dir}
  ./bootstrap --prefix=${target} | indent
  make | indent
  make install | indent
  PATH=${target}/bin:$PATH
  cd ..

  echo "Compiling libevent v${libe_version}..." | indent
  #Compile libevent
  cd ${libe_dir}
  ./configure --prefix=${target} | indent
  make install | indent
  cd ..

  echo "Compiling io v${io_version}..." | indent
  #Compile IO
  cd ${io_tar_dir}
  sed -i s/add_subdirectory\(Python\)/#add_subdirectory\(Python\)/ addons/CMakeLists.txt
  mkdir build
  cd build
  cmake -DCMAKE_INSTALL_PREFIX=${target} -DCMAKE_FIND_ROOT_PATH=${target} -DCMAKE_BUILD_TYPE=release .. | indent
  make install | indent
  cd ..

  #Create cache slug
  tar czf ${cache_target} -C ${target} .
fi

mkdir -p ${build_target}
tar xzf ${cache_target} -C ${build_target}
